{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.14","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"markdown","source":"# Fruitoo\n## 🍌🍇🍉🍐🍒🍓🍑🥝🥭🫐🍊","metadata":{}},{"cell_type":"markdown","source":"Fruitoo! What a Fruit Bonanza!\n\nWelcome to the machine learning model using image classification to determine what fruit is depicted in an image!\n\n> Fruitoo is based on a dataset for fruit recognition, produced by Chris Gorgolewski located here on Kaggle: \nhttps://www.kaggle.com/datasets/chrisfilo/fruit-recognition","metadata":{}},{"cell_type":"markdown","source":"## Setting up Fruitoo\nThe setup includes importing relevant libraries.","metadata":{}},{"cell_type":"code","source":"# Python\nimport sys\n\n# Scikit-learn\nimport sklearn\n\n# Other\nimport numpy as np\nimport pandas as pd\nimport tensorflow as tf\nimport PIL\nimport os\nfrom pathlib import Path\n\n# For plotting\n%matplotlib inline\nimport matplotlib as mpl\nimport matplotlib.pyplot as plt\n\n# For image classification\nfrom tensorflow import keras\nfrom tensorflow.keras import layers\nfrom tensorflow.keras import Sequential","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","trusted":true},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"## Import and Prepare the Data\nWe start preparing the data to be used for training Fruitoo. First we define the paths of the files and make sure we can read them.","metadata":{}},{"cell_type":"code","source":"import urllib.request","metadata":{"trusted":true},"outputs":[],"execution_count":null},{"cell_type":"code","source":"dataset = Path('/kaggle/input/fruit-recognition')","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-11-10T17:52:03.119691Z","iopub.execute_input":"2024-11-10T17:52:03.120224Z","iopub.status.idle":"2024-11-10T17:52:03.450748Z","shell.execute_reply.started":"2024-11-10T17:52:03.120181Z","shell.execute_reply":"2024-11-10T17:52:03.448960Z"}},"outputs":[{"traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","Cell \u001b[0;32mIn[1], line 1\u001b[0m\n\u001b[0;32m----> 1\u001b[0m dataset \u001b[38;5;241m=\u001b[39m \u001b[43mPath\u001b[49m(\u001b[38;5;124m'\u001b[39m\u001b[38;5;124m/kaggle/input/fruit-recognition\u001b[39m\u001b[38;5;124m'\u001b[39m)\n","\u001b[0;31mNameError\u001b[0m: name 'Path' is not defined"],"ename":"NameError","evalue":"name 'Path' is not defined","output_type":"error"}],"execution_count":1},{"cell_type":"code","source":"image_count = len(list(dataset.pathlib('*/*.png')))\nprint(image_count)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-11-10T17:52:23.660957Z","iopub.execute_input":"2024-11-10T17:52:23.661386Z","iopub.status.idle":"2024-11-10T17:52:23.687340Z","shell.execute_reply.started":"2024-11-10T17:52:23.661323Z","shell.execute_reply":"2024-11-10T17:52:23.685812Z"}},"outputs":[{"traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","Cell \u001b[0;32mIn[2], line 1\u001b[0m\n\u001b[0;32m----> 1\u001b[0m image_count \u001b[38;5;241m=\u001b[39m \u001b[38;5;28mlen\u001b[39m(\u001b[38;5;28mlist\u001b[39m(\u001b[43mdataset\u001b[49m\u001b[38;5;241m.\u001b[39mpathlib(\u001b[38;5;124m'\u001b[39m\u001b[38;5;124m*/*.png\u001b[39m\u001b[38;5;124m'\u001b[39m)))\n\u001b[1;32m      2\u001b[0m \u001b[38;5;28mprint\u001b[39m(image_count)\n","\u001b[0;31mNameError\u001b[0m: name 'dataset' is not defined"],"ename":"NameError","evalue":"name 'dataset' is not defined","output_type":"error"}],"execution_count":2},{"cell_type":"code","source":"","metadata":{"trusted":true},"outputs":[],"execution_count":null}]}